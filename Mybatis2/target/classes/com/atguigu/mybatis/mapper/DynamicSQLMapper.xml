<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.mybatis.mapper.DynamicSQLMapper">

<!--    List<Emp> getEmpByCondition(Emp emp);-->
<!--    动态SQL:
1.if:根据标签中的test属性所对应的表达式决定标签的内容是否需要拼接到SQL中-->
<!--    这里如果不写条件 1=1 可能会出现emp_name=null,然后 and age=#{age}拼接到Sql语句，会报错-->
    <select id="getEmpByCondition1" resultType="Emp">
        select * from t_emp where 1=1
        <if test="empName!=null and empName!=''">
            emp_name=#{empName}
        </if>
        <if test="age!=null and age!=''">
            and age=#{age}
        </if>
        <if test="sex!=null and sex!=''">
            and sex=#{sex}
        </if>
        <if test="email!=null and email!=''">
            and email=#{email}
        </if>
    </select>
<!--
2.where:当where标签中有内容时,会自动生成where关键字,并将内容前多余的and或or去掉
,当where标签中没有有内容时,sql中不会生成where关键字.
注意:where标签不能将其中的内容后面多余的and和or去掉
-->
    <select id="getEmpByCondition2" resultType="Emp">
        select * from t_emp
        <where>
        <if test="empName!=null and empName!=''">
            emp_name=#{empName}
        </if>
        <if test="age!=null and age!=''">
            and age=#{age}
        </if>
        <if test="sex!=null and sex!=''">
            and sex=#{sex}
        </if>
        <if test="email!=null and email!=''">
            and email=#{email}
        </if>
        </where>
    </select>

    <!--3.trim;
    若标签中有内容时:
    prefix|suffix:将trim标签中内容前面或后面添加指定内容
    suffixoverrides|prefixoverrides:将trim标签中的内容前面或后面去掉指定内容
    若标签中有内容时:sql不会生成 where关键字-->
    <select id="getEmpByCondition" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName!=null and empName!=''">
                emp_name=#{empName} and
            </if>
            <if test="age!=null and age!=''">
                age=#{age} and
            </if>
            <if test="sex!=null and sex!=''">
                sex=#{sex}and
            </if>
            <if test="email!=null and email!=''">
                email=#{email}
            </if>
        </trim>
    </select>

<!--    List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName!=null and empName!=''">
                    emp_name=#{empName}
                </when>
                <when test="age!=null and age!=''">
                    age=#{age}
                </when>
                <when test="sex!=null and sex!=''">
                    sex=#{sex}
                </when>
                <when test="email!=null and email!=''">
                    email=#{email}
                </when>
                <otherwise>
                    did=1
                </otherwise>
            </choose>
        </where>
    </select>

<!--    int deleteMoreByArray(Integer[] eids);-->
<!--foreach参数:
collection:设置需要循环的数组或集合
 item:表示数组或集合中的每一个数据
 separator:循环体之间的分隔符
 -->
    <delete id="deleteMoreByArray">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
           eid= #{eid}
        </foreach>

    </delete>
<!--    <delete id="deleteMoreByArray">
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>

    </delete>-->

<!--        int insertMoreByList(List<Emp> emps);-->
    <insert id="insertMoreByList">
        insert into t_emp values
            <foreach collection="emps" item="emp" separator=",">
                (null,#{emp.empName},#{emp.age},#{emp.sex},#{emp.email},null)
            </foreach>
    </insert>
</mapper>